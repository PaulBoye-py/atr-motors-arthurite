name: ATR Motors Infrastructure Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# These environment variables will be used by Terraform
env:
  AWS_REGION: us-east-1
  TERRAFORM_VERSION: 1.5.7

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Add a step to create the tfvars file before Terraform init
    - name: Create tfvars file
      run: |
        cat << EOF > terraform.tfvars
        aws_access_key = "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws_secret_key = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        EOF

# Then proceed with your existing Terraform steps
- name: Terraform Init
  run: terraform init

- name: Terraform Validate
  run: terraform validate

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Validate Terraform configuration
    - name: Terraform Validate
      run: terraform validate

    # Terraform Plan for Pull Requests
    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      id: plan
      run: |
        terraform plan -no-color -out=tfplan
      continue-on-error: true

    # Add a comment to pull requests with Terraform Plan details
    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan üìù\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>

          \`\`\`terraform
          ${process.env.PLAN}
          \`\`\`

          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    # Terraform Apply on merge to main
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        terraform apply -auto-approve -var-file=".tfvars"
    
    # Add this step after Terraform Apply
    - name: Display Load Balancer URL
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "Load Balancer URL: $(terraform output -raw load_balancer_dns)"
